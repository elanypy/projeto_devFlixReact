{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAPPYCODE-PROFESSORA\\\\Documents\\\\ELANY\\\\Imers\\xE3oReact\\\\devflix\\\\src\\\\components\\\\FormField\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nconst FormFieldWrapper = styled.div`\n    position:relative;\n    textarea{\n        min-height: 350px;\n    }\n    input[type=\"color\"]{\n        padding-left:56px;\n    }\n`;\nconst Label = styled.label``;\nLabel.Text = styled.span`\n  color: #E5E5E5;\n  height: 57px;\n  position: absolute; \n  top: 0;\n  left: 16px;\n  \n  display: flex;\n  align-items: center;\n  \n  transform-origin: 0% 0%;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 300;\n  \n  transition: .1s ease-in-out;\n`;\nconst Input = styled.input`\n     background: #53585D;\n  color: #F5F5F5;\n  display: block;\n  width: 100%;\n  height: 57px;\n  font-size: 18px;\n  \n  outline: 0;\n  border: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid #53585D;\n  \n  padding: 16px 16px;\n  margin-bottom: 45px;\n  \n  resize: none;\n  border-radius: 4px;\n  transition: border-color .3s;\n  \n  &:focus {\n    border-bottom-color: var(--primary);\n  }\n  &:focus:not([type=\"color\"]) + span{\n    transform: scale(.6) translateY(-10px)\n  }\n\n  ${function ({\n  hasValue\n}) {\n  return hasValue && css`\n      &:not ([type=\"color\"]) + span{\n          transform: scale(.6) translateY(-10px);\n      }\n      `;\n}}\n`;\n\nfunction FormField({\n  label,\n  type,\n  name,\n  value,\n  onChange\n}) {\n  const fieldId = `id_${name}`;\n  const isTextArea = type === 'textarea';\n  const tag = isTextArea ? 'textarea' : 'input';\n  const hasValue = Boolean(value.length);\n  return /*#__PURE__*/React.createElement(FormFieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: fieldId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    as: tag,\n    id: fieldId,\n    type: type,\n    name: name,\n    hasValue: hasValue,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Label.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, label, \":\")));\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {}\n};\nFormField.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default FormField;","map":{"version":3,"sources":["C:/Users/HAPPYCODE-PROFESSORA/Documents/ELANY/Imers√£oReact/devflix/src/components/FormField/index.js"],"names":["React","PropTypes","styled","css","FormFieldWrapper","div","Label","label","Text","span","Input","input","hasValue","FormField","type","name","value","onChange","fieldId","isTextArea","tag","Boolean","length","defaultProps","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA6B,mBAA7B;AAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAI;;;;;;;;CAApC;AAUA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAM,EAA3B;AACAD,KAAK,CAACE,IAAN,GAAaN,MAAM,CAACO,IAAK;;;;;;;;;;;;;;;;CAAzB;AAmBA,MAAMC,KAAK,GAAGR,MAAM,CAACS,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BvB,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAAwB;AACxB,SAAOA,QAAQ,IAAIT,GAAI;;;;OAAvB;AAKD,CAAC;CAjCJ;;AAoCA,SAASU,SAAT,CAAmB;AACjBN,EAAAA,KADiB;AACVO,EAAAA,IADU;AACJC,EAAAA,IADI;AACEC,EAAAA,KADF;AACSC,EAAAA;AADT,CAAnB,EAEG;AACD,QAAMC,OAAO,GAAI,MAAKH,IAAK,EAA3B;AACA,QAAMI,UAAU,GAAGL,IAAI,KAAK,UAA5B;AACA,QAAMM,GAAG,GAAGD,UAAU,GAAG,UAAH,GAAgB,OAAtC;AAEA,QAAMP,QAAQ,GAAGS,OAAO,CAACL,KAAK,CAACM,MAAP,CAAxB;AACA,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEJ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAEE,GADN;AAEE,IAAA,EAAE,EAAEF,OAFN;AAGE,IAAA,IAAI,EAAEJ,IAHR;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,QAAQ,EAAEH,QALZ;AAME,IAAA,KAAK,EAAEI,KANT;AAOE,IAAA,QAAQ,EAAEC,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KADH,MAXF,CADF,CADF;AAoBD;;AAEDM,SAAS,CAACU,YAAV,GAAyB;AACvBT,EAAAA,IAAI,EAAE,MADiB;AAEvBE,EAAAA,KAAK,EAAE,EAFgB;AAGvBC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAHK,CAAzB;AAKAJ,SAAS,CAACW,SAAV,GAAsB;AACpBjB,EAAAA,KAAK,EAAEN,SAAS,CAACwB,MAAV,CAAiBC,UADJ;AAEpBZ,EAAAA,IAAI,EAAEb,SAAS,CAACwB,MAFI;AAGpBV,EAAAA,IAAI,EAAEd,SAAS,CAACwB,MAAV,CAAiBC,UAHH;AAIpBV,EAAAA,KAAK,EAAEf,SAAS,CAACwB,MAJG;AAKpBR,EAAAA,QAAQ,EAAEhB,SAAS,CAAC0B;AALA,CAAtB;AASA,eAAed,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css }  from 'styled-components';\r\n\r\nconst FormFieldWrapper = styled.div`\r\n    position:relative;\r\n    textarea{\r\n        min-height: 350px;\r\n    }\r\n    input[type=\"color\"]{\r\n        padding-left:56px;\r\n    }\r\n`;\r\n\r\nconst Label = styled.label``;\r\nLabel.Text = styled.span`\r\n  color: #E5E5E5;\r\n  height: 57px;\r\n  position: absolute; \r\n  top: 0;\r\n  left: 16px;\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  transform-origin: 0% 0%;\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  \r\n  transition: .1s ease-in-out;\r\n`;\r\n\r\n\r\nconst Input = styled.input`\r\n     background: #53585D;\r\n  color: #F5F5F5;\r\n  display: block;\r\n  width: 100%;\r\n  height: 57px;\r\n  font-size: 18px;\r\n  \r\n  outline: 0;\r\n  border: 0;\r\n  border-top: 4px solid transparent;\r\n  border-bottom: 4px solid #53585D;\r\n  \r\n  padding: 16px 16px;\r\n  margin-bottom: 45px;\r\n  \r\n  resize: none;\r\n  border-radius: 4px;\r\n  transition: border-color .3s;\r\n  \r\n  &:focus {\r\n    border-bottom-color: var(--primary);\r\n  }\r\n  &:focus:not([type=\"color\"]) + span{\r\n    transform: scale(.6) translateY(-10px)\r\n  }\r\n\r\n  ${function ({ hasValue }) {\r\n    return hasValue && css`\r\n      &:not ([type=\"color\"]) + span{\r\n          transform: scale(.6) translateY(-10px);\r\n      }\r\n      `;\r\n  }}\r\n`;\r\n \r\nfunction FormField({\r\n  label, type, name, value, onChange,\r\n}) {\r\n  const fieldId = `id_${name}`;\r\n  const isTextArea = type === 'textarea'\r\n  const tag = isTextArea ? 'textarea' : 'input';\r\n\r\n  const hasValue = Boolean(value.length);\r\n  return (\r\n    <FormFieldWrapper>\r\n      <Label htmlFor={fieldId}>\r\n        <Input\r\n          as={tag}\r\n          id={fieldId}\r\n          type={type}\r\n          name={name}\r\n          hasValue={hasValue}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n\r\n        <Label.Text>\r\n          {label}\r\n          :\r\n        </Label.Text>\r\n      </Label>\r\n    </FormFieldWrapper>\r\n  );\r\n}\r\n\r\nFormField.defaultProps = {\r\n  type: 'text',\r\n  value: '',\r\n  onChange: () => {},\r\n};\r\nFormField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n\r\n};\r\n\r\nexport default FormField;\r\n"]},"metadata":{},"sourceType":"module"}